/* tslint:disable */
/* eslint-disable */
/**
 * Relisten API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    FlacType,
    FlacTypeFromJSON,
    FlacTypeFromJSONTyped,
    FlacTypeToJSON,
    Show,
    ShowFromJSON,
    ShowFromJSONTyped,
    ShowToJSON,
    SlimArtist,
    SlimArtistFromJSON,
    SlimArtistFromJSONTyped,
    SlimArtistToJSON,
    Venue,
    VenueFromJSON,
    VenueFromJSONTyped,
    VenueToJSON,
} from './';

/**
 * 
 * @export
 * @interface SourceWithSlimArtist
 */
export interface SourceWithSlimArtist {
    /**
     * 
     * @type {SlimArtist}
     * @memberof SourceWithSlimArtist
     */
    slimArtist: SlimArtist;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    showId?: number | null;
    /**
     * 
     * @type {Show}
     * @memberof SourceWithSlimArtist
     */
    show?: Show;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    taperNotes?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    source?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    taper?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    transferrer?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    lineage?: string | null;
    /**
     * 
     * @type {FlacType}
     * @memberof SourceWithSlimArtist
     */
    flacType: FlacType;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    artistId: number;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    venueId?: number | null;
    /**
     * 
     * @type {Venue}
     * @memberof SourceWithSlimArtist
     */
    venue?: Venue;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    displayDate: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof SourceWithSlimArtist
     */
    isSoundboard: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SourceWithSlimArtist
     */
    isRemaster: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SourceWithSlimArtist
     */
    hasJamcharts: boolean;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    avgRating: number;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    numReviews: number;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    numRatings?: number | null;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    avgRatingWeighted: number;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    duration?: number;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    upstreamIdentifier: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceWithSlimArtist
     */
    uuid: string;
    /**
     * 
     * @type {number}
     * @memberof SourceWithSlimArtist
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof SourceWithSlimArtist
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SourceWithSlimArtist
     */
    updatedAt: Date;
}

export function SourceWithSlimArtistFromJSON(json: any): SourceWithSlimArtist {
    return SourceWithSlimArtistFromJSONTyped(json, false);
}

export function SourceWithSlimArtistFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceWithSlimArtist {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'slimArtist': SlimArtistFromJSON(json['slim_artist']),
        'showId': !exists(json, 'show_id') ? undefined : json['show_id'],
        'show': !exists(json, 'show') ? undefined : ShowFromJSON(json['show']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'taperNotes': !exists(json, 'taper_notes') ? undefined : json['taper_notes'],
        'source': !exists(json, 'source') ? undefined : json['source'],
        'taper': !exists(json, 'taper') ? undefined : json['taper'],
        'transferrer': !exists(json, 'transferrer') ? undefined : json['transferrer'],
        'lineage': !exists(json, 'lineage') ? undefined : json['lineage'],
        'flacType': FlacTypeFromJSON(json['flac_type']),
        'artistId': json['artist_id'],
        'venueId': !exists(json, 'venue_id') ? undefined : json['venue_id'],
        'venue': !exists(json, 'venue') ? undefined : VenueFromJSON(json['venue']),
        'displayDate': json['display_date'],
        'isSoundboard': json['is_soundboard'],
        'isRemaster': json['is_remaster'],
        'hasJamcharts': json['has_jamcharts'],
        'avgRating': json['avg_rating'],
        'numReviews': json['num_reviews'],
        'numRatings': !exists(json, 'num_ratings') ? undefined : json['num_ratings'],
        'avgRatingWeighted': json['avg_rating_weighted'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'upstreamIdentifier': json['upstream_identifier'],
        'uuid': json['uuid'],
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function SourceWithSlimArtistToJSON(value?: SourceWithSlimArtist | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'slim_artist': SlimArtistToJSON(value.slimArtist),
        'show_id': value.showId,
        'show': ShowToJSON(value.show),
        'description': value.description,
        'taper_notes': value.taperNotes,
        'source': value.source,
        'taper': value.taper,
        'transferrer': value.transferrer,
        'lineage': value.lineage,
        'flac_type': FlacTypeToJSON(value.flacType),
        'artist_id': value.artistId,
        'venue_id': value.venueId,
        'venue': VenueToJSON(value.venue),
        'display_date': value.displayDate,
        'is_soundboard': value.isSoundboard,
        'is_remaster': value.isRemaster,
        'has_jamcharts': value.hasJamcharts,
        'avg_rating': value.avgRating,
        'num_reviews': value.numReviews,
        'num_ratings': value.numRatings,
        'avg_rating_weighted': value.avgRatingWeighted,
        'duration': value.duration,
        'upstream_identifier': value.upstreamIdentifier,
        'uuid': value.uuid,
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'updated_at': (value.updatedAt.toISOString()),
    };
}


