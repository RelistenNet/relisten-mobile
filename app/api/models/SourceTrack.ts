// tslint:disable
/**
 * Relisten API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SourceTrack
 */
export interface SourceTrack  {
    /**
     * 
     * @type {number}
     * @memberof SourceTrack
     */
    sourceId: number;
    /**
     * 
     * @type {number}
     * @memberof SourceTrack
     */
    sourceSetId: number;
    /**
     * 
     * @type {number}
     * @memberof SourceTrack
     */
    artistId: number;
    /**
     * 
     * @type {number}
     * @memberof SourceTrack
     */
    trackPosition: number;
    /**
     * 
     * @type {number}
     * @memberof SourceTrack
     */
    duration?: number;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    mp3Url?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    mp3Md5?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    flacUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    flacMd5?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrack
     */
    uuid: string;
    /**
     * 
     * @type {number}
     * @memberof SourceTrack
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof SourceTrack
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SourceTrack
     */
    updatedAt: Date;
}

export function SourceTrackFromJSON(json: any): SourceTrack {
    return {
        'sourceId': json['source_id'],
        'sourceSetId': json['source_set_id'],
        'artistId': json['artist_id'],
        'trackPosition': json['track_position'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'title': json['title'],
        'slug': json['slug'],
        'mp3Url': !exists(json, 'mp3_url') ? undefined : json['mp3_url'],
        'mp3Md5': !exists(json, 'mp3_md5') ? undefined : json['mp3_md5'],
        'flacUrl': !exists(json, 'flac_url') ? undefined : json['flac_url'],
        'flacMd5': !exists(json, 'flac_md5') ? undefined : json['flac_md5'],
        'uuid': json['uuid'],
        'id': json['id'],
        'createdAt': new Date(json['created_at']),
        'updatedAt': new Date(json['updated_at']),
    };
}

export function SourceTrackToJSON(value?: SourceTrack): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'source_id': value.sourceId,
        'source_set_id': value.sourceSetId,
        'artist_id': value.artistId,
        'track_position': value.trackPosition,
        'duration': value.duration,
        'title': value.title,
        'slug': value.slug,
        'mp3_url': value.mp3Url,
        'mp3_md5': value.mp3Md5,
        'flac_url': value.flacUrl,
        'flac_md5': value.flacMd5,
        'uuid': value.uuid,
        'id': value.id,
        'created_at': value.createdAt.toISOString(),
        'updated_at': value.updatedAt.toISOString(),
    };
}


