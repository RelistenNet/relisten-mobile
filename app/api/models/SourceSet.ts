/* tslint:disable */
/* eslint-disable */
/**
 * Relisten API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SourceTrack,
    SourceTrackFromJSON,
    SourceTrackFromJSONTyped,
    SourceTrackToJSON,
} from './';

/**
 * 
 * @export
 * @interface SourceSet
 */
export interface SourceSet {
    /**
     * 
     * @type {number}
     * @memberof SourceSet
     */
    sourceId: number;
    /**
     * 
     * @type {number}
     * @memberof SourceSet
     */
    index: number;
    /**
     * 
     * @type {boolean}
     * @memberof SourceSet
     */
    isEncore: boolean;
    /**
     * 
     * @type {string}
     * @memberof SourceSet
     */
    name: string | null;
    /**
     * 
     * @type {Array<SourceTrack>}
     * @memberof SourceSet
     */
    tracks: Array<SourceTrack> | null;
    /**
     * 
     * @type {number}
     * @memberof SourceSet
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof SourceSet
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof SourceSet
     */
    updatedAt: Date;
}

export function SourceSetFromJSON(json: any): SourceSet {
    return SourceSetFromJSONTyped(json, false);
}

export function SourceSetFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceSet {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceId': json['source_id'],
        'index': json['index'],
        'isEncore': json['is_encore'],
        'name': json['name'],
        'tracks': (json['tracks'] === null ? null : (json['tracks'] as Array<any>).map(SourceTrackFromJSON)),
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
    };
}

export function SourceSetToJSON(value?: SourceSet | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'source_id': value.sourceId,
        'index': value.index,
        'is_encore': value.isEncore,
        'name': value.name,
        'tracks': (value.tracks === null ? null : (value.tracks as Array<any>).map(SourceTrackToJSON)),
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'updated_at': (value.updatedAt.toISOString()),
    };
}


