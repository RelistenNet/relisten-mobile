/* tslint:disable */
/* eslint-disable */
/**
 * Relisten API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PlayedSourceTrack,
    PlayedSourceTrackFromJSON,
    PlayedSourceTrackFromJSONTyped,
    PlayedSourceTrackToJSON,
    SourceTrackPlayAppType,
    SourceTrackPlayAppTypeFromJSON,
    SourceTrackPlayAppTypeFromJSONTyped,
    SourceTrackPlayAppTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface SourceTrackPlay
 */
export interface SourceTrackPlay {
    /**
     * 
     * @type {number}
     * @memberof SourceTrackPlay
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof SourceTrackPlay
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof SourceTrackPlay
     */
    sourceTrackUuid: string;
    /**
     * 
     * @type {string}
     * @memberof SourceTrackPlay
     */
    userUuid: string | null;
    /**
     * 
     * @type {SourceTrackPlayAppType}
     * @memberof SourceTrackPlay
     */
    appType: SourceTrackPlayAppType;
    /**
     * 
     * @type {SourceTrackPlayAppType}
     * @memberof SourceTrackPlay
     */
    appTypeDescription: SourceTrackPlayAppType;
    /**
     * 
     * @type {PlayedSourceTrack}
     * @memberof SourceTrackPlay
     */
    track?: PlayedSourceTrack;
}

export function SourceTrackPlayFromJSON(json: any): SourceTrackPlay {
    return SourceTrackPlayFromJSONTyped(json, false);
}

export function SourceTrackPlayFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceTrackPlay {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['created_at'])),
        'sourceTrackUuid': json['source_track_uuid'],
        'userUuid': json['user_uuid'],
        'appType': SourceTrackPlayAppTypeFromJSON(json['app_type']),
        'appTypeDescription': SourceTrackPlayAppTypeFromJSON(json['app_type_description']),
        'track': !exists(json, 'track') ? undefined : PlayedSourceTrackFromJSON(json['track']),
    };
}

export function SourceTrackPlayToJSON(value?: SourceTrackPlay | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'created_at': (value.createdAt.toISOString()),
        'source_track_uuid': value.sourceTrackUuid,
        'user_uuid': value.userUuid,
        'app_type': SourceTrackPlayAppTypeToJSON(value.appType),
        'app_type_description': SourceTrackPlayAppTypeToJSON(value.appTypeDescription),
        'track': PlayedSourceTrackToJSON(value.track),
    };
}


