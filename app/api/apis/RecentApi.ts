/* tslint:disable */
/* eslint-disable */
/**
 * Relisten API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    BooleanResponseEnvelope,
    BooleanResponseEnvelopeFromJSON,
    BooleanResponseEnvelopeToJSON,
    ShowWithArtist,
    ShowWithArtistFromJSON,
    ShowWithArtistToJSON,
} from '../models';

export interface ApiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGetRequest {
    artistIdOrSlug: string;
    limit?: number;
    previousDays?: number;
}

export interface ApiV2ArtistsShowsRecentlyAddedGetRequest {
    limit?: number;
}

export interface ApiV2ShowsRecentlyAddedGetRequest {
    limit?: number;
    previousDays?: number;
}

/**
 * 
 */
export class RecentApi extends runtime.BaseAPI {

    /**
     */
    async apiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGetRaw(requestParameters: ApiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ShowWithArtist>>> {
        if (requestParameters.artistIdOrSlug === null || requestParameters.artistIdOrSlug === undefined) {
            throw new runtime.RequiredError('artistIdOrSlug','Required parameter requestParameters.artistIdOrSlug was null or undefined when calling apiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGet.');
        }

        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.previousDays !== undefined) {
            queryParameters['previousDays'] = requestParameters.previousDays;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/artists/{artistIdOrSlug}/shows/recently-added`.replace(`{${"artistIdOrSlug"}}`, encodeURIComponent(String(requestParameters.artistIdOrSlug))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ShowWithArtistFromJSON));
    }

    /**
     */
    async apiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGet(requestParameters: ApiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGetRequest, initOverrides?: RequestInit): Promise<Array<ShowWithArtist>> {
        const response = await this.apiV2ArtistsArtistIdOrSlugShowsRecentlyAddedGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV2ArtistsShowsRecentlyAddedGetRaw(requestParameters: ApiV2ArtistsShowsRecentlyAddedGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ShowWithArtist>>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/artists/shows/recently-added`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ShowWithArtistFromJSON));
    }

    /**
     */
    async apiV2ArtistsShowsRecentlyAddedGet(requestParameters: ApiV2ArtistsShowsRecentlyAddedGetRequest, initOverrides?: RequestInit): Promise<Array<ShowWithArtist>> {
        const response = await this.apiV2ArtistsShowsRecentlyAddedGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV2ShowsRecentlyAddedGetRaw(requestParameters: ApiV2ShowsRecentlyAddedGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ShowWithArtist>>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.previousDays !== undefined) {
            queryParameters['previousDays'] = requestParameters.previousDays;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/shows/recently-added`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ShowWithArtistFromJSON));
    }

    /**
     */
    async apiV2ShowsRecentlyAddedGet(requestParameters: ApiV2ShowsRecentlyAddedGetRequest, initOverrides?: RequestInit): Promise<Array<ShowWithArtist>> {
        const response = await this.apiV2ShowsRecentlyAddedGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
