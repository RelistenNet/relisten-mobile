/* tslint:disable */
/* eslint-disable */
/**
 * Relisten API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Artist,
    ArtistFromJSON,
    ArtistToJSON,
    ArtistWithCounts,
    ArtistWithCountsFromJSON,
    ArtistWithCountsToJSON,
    BooleanResponseEnvelope,
    BooleanResponseEnvelopeFromJSON,
    BooleanResponseEnvelopeToJSON,
} from '../models';

export interface ApiV2ArtistsArtistIdOrSlugGetRequest {
    artistIdOrSlug: string;
}

/**
 * 
 */
export class ArtistsApi extends runtime.BaseAPI {

    /**
     */
    async apiV2ArtistsArtistIdOrSlugGetRaw(requestParameters: ApiV2ArtistsArtistIdOrSlugGetRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<Artist>> {
        if (requestParameters.artistIdOrSlug === null || requestParameters.artistIdOrSlug === undefined) {
            throw new runtime.RequiredError('artistIdOrSlug','Required parameter requestParameters.artistIdOrSlug was null or undefined when calling apiV2ArtistsArtistIdOrSlugGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/artists/{artistIdOrSlug}`.replace(`{${"artistIdOrSlug"}}`, encodeURIComponent(String(requestParameters.artistIdOrSlug))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ArtistFromJSON(jsonValue));
    }

    /**
     */
    async apiV2ArtistsArtistIdOrSlugGet(requestParameters: ApiV2ArtistsArtistIdOrSlugGetRequest, initOverrides?: RequestInit): Promise<Artist> {
        const response = await this.apiV2ArtistsArtistIdOrSlugGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiV2ArtistsGetRaw(initOverrides?: RequestInit): Promise<runtime.ApiResponse<Array<ArtistWithCounts>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/artists`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ArtistWithCountsFromJSON));
    }

    /**
     */
    async apiV2ArtistsGet(initOverrides?: RequestInit): Promise<Array<ArtistWithCounts>> {
        const response = await this.apiV2ArtistsGetRaw(initOverrides);
        return await response.value();
    }

}
