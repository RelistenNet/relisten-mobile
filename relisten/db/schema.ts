import { appSchema, tableSchema } from '@nozbe/watermelondb';

export const Tables = {
  artists: 'artists' as const,
  userLists: 'user_lists' as const,
  userListEntries: 'user_list_entries' as const,
  shows: 'shows' as const,
  years: 'years' as const,
  sources: 'sources' as const,
  sourceSets: 'source_sets' as const,
  sourceTracks: 'source_tracks' as const,
  venues: 'venues' as const,
  tours: 'tours' as const,
  setlistSongs: 'setlist_songs' as const,
};

export const Columns = {
  artists: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    musicbrainzId: 'musicbrainz_id' as const,
    name: 'name' as const,
    featured: 'featured' as const,
    slug: 'slug' as const,
    sortName: 'sort_name' as const,
    features: 'features' as const,
    upstreamSources: 'upstream_sources' as const,
    showCount: 'show_count' as const,
    sourceCount: 'source_count' as const,
  },
  userLists: {
    specialType: 'special_type' as const,
    title: 'title' as const,
    description: 'description' as const,
    isPlaylist: 'is_playlist' as const,
    isPublic: 'is_public' as const,
    createdAt: 'created_at' as const,
  },
  userListEntries: {
    onUserListId: 'on_user_list_id' as const,
    artistId: 'artist_id' as const,
    yearId: 'year_id' as const,
    showId: 'show_id' as const,
    sourceId: 'source_id' as const,
    venueId: 'venue_id' as const,
    setlistSongId: 'setlist_song_id' as const,
    sourceTrackId: 'source_track_id' as const,
    userListId: 'user_list_id' as const,
    tourId: 'tour_id' as const,
    createdAt: 'created_at' as const,
  },
  shows: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    artistId: 'artist_id' as const,
    venueId: 'venue_id' as const,
    tourId: 'tour_id' as const,
    yearId: 'year_id' as const,
    date: 'date' as const,
    avgRating: 'avg_rating' as const,
    avgDuration: 'avg_duration' as const,
    displayDate: 'display_date' as const,
    mostRecentSourceUpdatedAt: 'most_recent_source_updated_at' as const,
    hasSoundboardSource: 'has_soundboard_source' as const,
    hasStreamableFlacSource: 'has_streamable_flac_source' as const,
    sourceCount: 'source_count' as const,
  },
  sources: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    artistId: 'artist_id' as const,
    venueId: 'venue_id' as const,
    displayDate: 'display_date' as const,
    isSoundboard: 'is_soundboard' as const,
    isRemaster: 'is_remaster' as const,
    hasJamcharts: 'has_jamcharts' as const,
    avgRating: 'avg_rating' as const,
    numReviews: 'num_reviews' as const,
    numRatings: 'num_ratings' as const,
    avgRatingWeighted: 'avg_rating_weighted' as const,
    duration: 'duration' as const,
    upstreamIdentifier: 'upstream_identifier' as const,
    showId: 'show_id' as const,
    description: 'description' as const,
    taperNotes: 'taper_notes' as const,
    source: 'source' as const,
    taper: 'taper' as const,
    transferrer: 'transferrer' as const,
    lineage: 'lineage' as const,
    flacType: 'flac_type' as const,
    reviewCount: 'review_count' as const,
    links: 'links' as const,
  },
  sourceSets: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    sourceId: 'source_id' as const,
    artistId: 'artist_id' as const,
    index: 'index' as const,
    isEncore: 'is_encore' as const,
    name: 'name' as const,
  },
  sourceTracks: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    sourceId: 'source_id' as const,
    sourceSetId: 'source_set_id' as const,
    artistId: 'artist_id' as const,
    trackPosition: 'track_position' as const,
    duration: 'duration' as const,
    title: 'title' as const,
    slug: 'slug' as const,
    mp3Url: 'mp3_url' as const,
    mp3Md5: 'mp3_md5' as const,
    flacUrl: 'flac_url' as const,
    flacMd5: 'flac_md5' as const,
  },
  years: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    showCount: 'show_count' as const,
    sourceCount: 'source_count' as const,
    duration: 'duration' as const,
    avgDuration: 'avg_duration' as const,
    avgRating: 'avg_rating' as const,
    year: 'year' as const,
    artistId: 'artist_id' as const,
  },
  venues: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    artistId: 'artist_id' as const,
    latitude: 'latitude' as const,
    longitude: 'longitude' as const,
    name: 'name' as const,
    location: 'location' as const,
    upstreamIdentifier: 'upstream_identifier' as const,
    slug: 'slug' as const,
    pastNames: 'past_names' as const,
    sortName: 'sort_name' as const,
    uuid: 'uuid' as const,
    showsAtVenue: 'shows_at_venue' as const,
  },
  tours: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    artistId: 'artist_id' as const,
    startDate: 'start_date' as const,
    endDate: 'end_date' as const,
    name: 'name' as const,
    slug: 'slug' as const,
    upstreamIdentifier: 'upstream_identifier' as const,
    showsOnTour: 'shows_on_tour' as const,
  },
  setlistSongs: {
    relistenCreatedAt: 'relisten_created_at' as const,
    relistenUpdatedAt: 'relisten_updated_at' as const,
    artistId: 'artist_id' as const,
    name: 'name' as const,
    slug: 'slug' as const,
    upstreamIdentifier: 'upstream_identifier' as const,
    sortName: 'sortName' as const,
    showsPlayedAt: 'shows_played_at' as const,
  },
};

type ColumnsType = typeof Columns;
export type TableNames = keyof typeof Tables;
export type ColumnPropertyNames<T extends TableNames> = keyof ColumnsType[T];
export type ColumnNames<T extends TableNames> = ColumnsType[T][keyof ColumnsType[T]];

export const IdentityJsonSanitizer = (json: any) => json;

export const relistenDbSchema = appSchema({
  version: 1,
  tables: [
    tableSchema({
      name: Tables.artists,
      columns: [
        { name: Columns.artists.relistenCreatedAt, type: 'number' },
        { name: Columns.artists.relistenUpdatedAt, type: 'number' },
        { name: Columns.artists.musicbrainzId, type: 'string' },
        { name: Columns.artists.name, type: 'string' },
        { name: Columns.artists.featured, type: 'number' },
        { name: Columns.artists.slug, type: 'string' },
        { name: Columns.artists.sortName, type: 'string' },
        { name: Columns.artists.features, type: 'string' },
        { name: Columns.artists.upstreamSources, type: 'string' },
        { name: Columns.artists.showCount, type: 'number' },
        { name: Columns.artists.sourceCount, type: 'number' },
      ],
    }),
    tableSchema({
      name: Tables.userLists,
      columns: [
        { name: Columns.userLists.specialType, type: 'string' },
        { name: Columns.userLists.title, type: 'string' },
        { name: Columns.userLists.description, type: 'string' },
        { name: Columns.userLists.isPlaylist, type: 'boolean' },
        { name: Columns.userLists.isPublic, type: 'boolean' },
        { name: Columns.userLists.createdAt, type: 'number' },
      ],
    }),
    tableSchema({
      name: Tables.userListEntries,
      columns: [
        { name: Columns.userListEntries.onUserListId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.artistId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.yearId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.showId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.sourceId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.venueId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.tourId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.userListId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.setlistSongId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.sourceTrackId, type: 'string', isIndexed: true },
        { name: Columns.userListEntries.createdAt, type: 'number' },
      ],
    }),
    tableSchema({
      name: Tables.shows,
      columns: [
        { name: Columns.shows.relistenCreatedAt, type: 'number' },
        { name: Columns.shows.relistenUpdatedAt, type: 'number' },
        { name: Columns.shows.artistId, type: 'string', isIndexed: true },
        { name: Columns.shows.venueId, type: 'string', isIndexed: true, isOptional: true },
        { name: Columns.shows.tourId, type: 'string', isIndexed: true, isOptional: true },
        { name: Columns.shows.yearId, type: 'string', isIndexed: true, isOptional: true },
        { name: Columns.shows.date, type: 'number' },
        { name: Columns.shows.avgRating, type: 'number' },
        { name: Columns.shows.avgDuration, type: 'number' },
        { name: Columns.shows.displayDate, type: 'string' },
        { name: Columns.shows.mostRecentSourceUpdatedAt, type: 'number' },
        { name: Columns.shows.hasSoundboardSource, type: 'boolean' },
        { name: Columns.shows.hasStreamableFlacSource, type: 'boolean' },
        { name: Columns.shows.sourceCount, type: 'number' },
      ],
    }),
    tableSchema({
      name: Tables.years,
      columns: [
        { name: Columns.years.relistenCreatedAt, type: 'number' },
        { name: Columns.years.relistenUpdatedAt, type: 'number' },
        { name: Columns.years.showCount, type: 'number' },
        { name: Columns.years.sourceCount, type: 'number' },
        { name: Columns.years.duration, type: 'number', isOptional: true },
        { name: Columns.years.avgDuration, type: 'number', isOptional: true },
        { name: Columns.years.avgRating, type: 'number', isOptional: true },
        { name: Columns.years.year, type: 'string' },
        { name: Columns.years.artistId, isIndexed: true, type: 'string' },
      ],
    }),
    tableSchema({
      name: Tables.sources,
      columns: [
        { name: Columns.sources.relistenCreatedAt, type: 'number' },
        { name: Columns.sources.relistenUpdatedAt, type: 'number' },
        { name: Columns.sources.artistId, type: 'string', isIndexed: true },
        { name: Columns.sources.venueId, type: 'string', isIndexed: true },
        { name: Columns.sources.displayDate, type: 'string' },
        { name: Columns.sources.isSoundboard, type: 'boolean' },
        { name: Columns.sources.isRemaster, type: 'boolean' },
        { name: Columns.sources.hasJamcharts, type: 'boolean' },
        { name: Columns.sources.avgRating, type: 'number' },
        { name: Columns.sources.numReviews, type: 'number' },
        { name: Columns.sources.numRatings, type: 'number', isOptional: true },
        { name: Columns.sources.avgRatingWeighted, type: 'number' },
        { name: Columns.sources.duration, type: 'number', isOptional: true },
        { name: Columns.sources.upstreamIdentifier, type: 'string' },
        { name: Columns.sources.showId, type: 'string', isIndexed: true },
        { name: Columns.sources.description, type: 'string' },
        { name: Columns.sources.taperNotes, type: 'string' },
        { name: Columns.sources.source, type: 'string' },
        { name: Columns.sources.taper, type: 'string' },
        { name: Columns.sources.transferrer, type: 'string' },
        { name: Columns.sources.lineage, type: 'string' },
        { name: Columns.sources.flacType, type: 'number' },
        { name: Columns.sources.reviewCount, type: 'number' },
        { name: Columns.sources.links, type: 'string' },
      ],
    }),
    tableSchema({
      name: Tables.sourceSets,
      columns: [
        { name: Columns.sourceSets.relistenCreatedAt, type: 'number' },
        { name: Columns.sourceSets.relistenUpdatedAt, type: 'number' },
        { name: Columns.sourceSets.sourceId, type: 'string', isIndexed: true },
        { name: Columns.sourceSets.artistId, type: 'string', isIndexed: true },
        { name: Columns.sourceSets.index, type: 'number' },
        { name: Columns.sourceSets.isEncore, type: 'boolean' },
        { name: Columns.sourceSets.name, type: 'string' },
      ],
    }),
    tableSchema({
      name: Tables.sourceTracks,
      columns: [
        { name: Columns.sourceTracks.relistenCreatedAt, type: 'number' },
        { name: Columns.sourceTracks.relistenUpdatedAt, type: 'number' },
        { name: Columns.sourceTracks.sourceId, type: 'string', isIndexed: true },
        { name: Columns.sourceTracks.sourceSetId, type: 'string', isIndexed: true },
        { name: Columns.sourceTracks.artistId, type: 'string', isIndexed: true },
        { name: Columns.sourceTracks.trackPosition, type: 'number' },
        { name: Columns.sourceTracks.duration, type: 'number', isOptional: true },
        { name: Columns.sourceTracks.title, type: 'string' },
        { name: Columns.sourceTracks.slug, type: 'string' },
        { name: Columns.sourceTracks.mp3Url, type: 'string', isOptional: true },
        { name: Columns.sourceTracks.mp3Md5, type: 'string', isOptional: true },
        { name: Columns.sourceTracks.flacUrl, type: 'string', isOptional: true },
        { name: Columns.sourceTracks.flacMd5, type: 'string', isOptional: true },
      ],
    }),
    tableSchema({
      name: Tables.venues,
      columns: [
        { name: Columns.venues.relistenCreatedAt, type: 'number' },
        { name: Columns.venues.relistenUpdatedAt, type: 'number' },
        { name: Columns.venues.artistId, type: 'string' },
        { name: Columns.venues.latitude, type: 'number', isOptional: true },
        { name: Columns.venues.longitude, type: 'number', isOptional: true },
        { name: Columns.venues.name, type: 'string' },
        { name: Columns.venues.location, type: 'string' },
        { name: Columns.venues.upstreamIdentifier, type: 'string' },
        { name: Columns.venues.slug, type: 'string' },
        { name: Columns.venues.pastNames, type: 'string', isOptional: true },
        { name: Columns.venues.sortName, type: 'string' },
        { name: Columns.venues.showsAtVenue, type: 'number' },
      ],
    }),
    tableSchema({
      name: Tables.tours,
      columns: [
        { name: Columns.tours.relistenCreatedAt, type: 'number' },
        { name: Columns.tours.relistenUpdatedAt, type: 'number' },
        { name: Columns.tours.artistId, type: 'string', isIndexed: true },
        { name: Columns.tours.startDate, type: 'string' },
        { name: Columns.tours.endDate, type: 'string' },
        { name: Columns.tours.name, type: 'string' },
        { name: Columns.tours.slug, type: 'string' },
        { name: Columns.tours.upstreamIdentifier, type: 'string' },
        { name: Columns.tours.showsOnTour, type: 'number' },
      ],
    }),
    tableSchema({
      name: Tables.setlistSongs,
      columns: [
        { name: Columns.setlistSongs.relistenCreatedAt, type: 'number' },
        { name: Columns.setlistSongs.relistenUpdatedAt, type: 'number' },
        { name: Columns.setlistSongs.artistId, type: 'string', isIndexed: true },
        { name: Columns.setlistSongs.name, type: 'string' },
        { name: Columns.setlistSongs.slug, type: 'string' },
        { name: Columns.setlistSongs.upstreamIdentifier, type: 'string' },
        { name: Columns.setlistSongs.sortName, type: 'string' },
        { name: Columns.setlistSongs.showsPlayedAt, type: 'number' },
      ],
    }),
  ],
});
